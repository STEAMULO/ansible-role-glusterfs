---
- name: Add PPA for GlusterFS.
  apt_repository:
    repo: 'ppa:gluster/glusterfs-{{ glusterfs_ppa_version }}'
    state: present
    update_cache: yes
  register: glusterfs_ppa_added
  when: glusterfs_ppa_use

- name: Ensure GlusterFS will reinstall if the PPA was just added.
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - glusterfs-server
    - glusterfs-client
  when: glusterfs_ppa_added.changed

- name: Ensure GlusterFS is installed.
  apt:
    name: "{{ item }}"
    state: installed
    default_release: "{{ glusterfs_default_release }}"
  with_items:
    - glusterfs-server
    - glusterfs-client

- name: Check if Gluster init.d script exists
  stat:
    path: /etc/init.d/glusterfs-server
  register: gluster_init_file

- name: Stop Gluster
  service:
    name: "{{ glusterfs_daemon }}"
    state: stopped
  when: gluster_init_file.stat.exists

- name: Remove Gluster init.d script
  shell: "update-rc.d {{ glusterfs_daemon }} disable && rm /etc/init.d/{{ glusterfs_daemon }}"
  when: gluster_init_file.stat.exists

- name: Create systemd unit
  copy:
    dest: "/etc/systemd/system/{{ glusterfs_daemon }}.service"
    content: |
      [Unit]
      Description=GlusterFS, a clustered file-system server
      Requires=rpcbind.service
      After=network.target rpcbind.service
      Before=network-online.target
      [Service]
      Type=forking
      PIDFile=/var/run/glusterd.pid
      LimitNOFILE=65536
      Environment="LOG_LEVEL=INFO"
      ExecStart=/usr/sbin/glusterd -p /var/run/glusterd.pid  --log-level $LOG_LEVEL $GLUSTERD_OPTIONS
      KillMode=process
      [Install]
      WantedBy=multi-user.target

- name: Start Gluster with systemd
  systemd:
    state: started
    daemon_reload: yes
    name: "{{ glusterfs_daemon }}"